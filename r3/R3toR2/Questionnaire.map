map "http://hl7.org/fhir/StructureMap/Questionnaire3to2" = "R3 to R2 Conversion for Questionnaire"

conceptmap "QuestionnaireStatus" {
  prefix s = "http://hl7.org/fhir/allergy-intolerance-status"
  prefix t = "http://hl7.org/fhir/allergy-verification-status"

  s:active = t:published
  s:draft = t:draft
  s:retired = t:retired
}


uses "http://hl7.org/fhir/StructureDefinition/Questionnaire" alias Questionnaire as source
uses "http://hl7.org/fhir/DSTU2/StructureDefinition/Questionnaire" alias QuestionnaireR2 as target

imports "http://hl7.org/fhir/StructureMap/*3to2"

group for type+types  Questionnaire extends DomainResource
  input src : Questionnaire as source
  input tgt : QuestionnaireR2 as target

  "Questionnaire-identifier" : for src.identifier make tgt.identifier
  "Questionnaire-version" : for src.version make tgt.version
  "Questionnaire-status" : for src.status as v make tgt.status = translate(v, "#QuestionnaireStatus", "code")
  "Questionnaire-date" : for src.date make tgt.date
  "Questionnaire-publisher" : for src.publisher make tgt.publisher
  "Questionnaire-telecom1" : for src.contact as v then {
    "Questionnaire-telecom-inner" : for v.telecom make tgt.telecom
  }
  "Questionnaire-subjectType" : for src.subjectType make tgt.subjectType

  "Questionnaire-group" : for src.item as vs0 where type = 'group' make tgt.group as vt0 then qstGroup(vs0, vt0)  // ignore root questions? (else create a holding group?)
endgroup

group qstGroup extends BackboneElement
  input src as source
  input tgt as target

  "Questionnaire.group-linkId" : for src.linkId make tgt.linkId
  "Questionnaire.group-title" : for src.text make tgt.title
  "Questionnaire.group-concept" : for src.code make tgt.concept
  "Questionnaire.group-required" : for src.required make tgt.required
  "Questionnaire.group-repeats" : for src.repeats make tgt.repeats
  "Questionnaire.group-group" : for src.item as vs0 where type = 'group' make tgt.group as vt0 then qstGroup(vs0, vt0)  
  "Questionnaire.group-question" : for src.item as vs0 where type != 'group' make tgt.question as vt0 then qstQuestion(vs0, vt0)  
endgroup

group qstQuestion extends BackboneElement
  input src as source
  input tgt as target

  "Questionnaire.group.question-type" : for src.type make tgt.type 
  "Questionnaire.group.question-linkId" : for src.linkId make tgt.linkId
  "Questionnaire.group.question-concept" : for src.code make tgt.concept
  "Questionnaire.group.question-text" : for src.text make tgt.text
  "Questionnaire.group.question-required" : for src.required make tgt.required
  "Questionnaire.group.question-repeats" : for src.repeats make tgt.repeats
  "Questionnaire.group.question-options" : for src.options make tgt.options
  "Questionnaire.group.question-option" : for src.option as s then {
    "Questionnaire.group.question-option-inner" : for s.value as v where v.is(Coding) make tgt.option = v
  }
  "Questionnaire.group.question-group" : for src.item as vs0 where type = 'group' make tgt.group as vt0 then qstGroup(vs0, vt0)  // ignore sub- questions? (else create a holding group?)
endgroup
