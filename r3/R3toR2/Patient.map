map "http://hl7.org/fhir/StructureMap/Patient3to2" = "R3 to R2 Conversion for Patient"

uses "http://hl7.org/fhir/StructureDefinition/Patient" alias Patient as source
uses "http://hl7.org/fhir/DSTU2/StructureDefinition/Patient" alias PatientR2 as target

imports "http://hl7.org/fhir/StructureMap/*3to2"

group for type+types  Patient extends DomainResource
  input src : Patient as source
  input tgt : PatientR2 as target

  "Patient-identifier" : for src.identifier make tgt.identifier
  "Patient-active" : for src.active make tgt.active
  "Patient-name" : for src.name make tgt.name
  "Patient-telecom" : for src.telecom make tgt.telecom
  "Patient-gender" : for src.gender make tgt.gender
  "Patient-birthDate" : for src.birthDate make tgt.birthDate
  "Patient-deceased-boolean" : for src.deceased : boolean as vs make tgt.deceased = create("boolean") as vt then boolean(vs, vt)
  "Patient-deceased-dateTime" : for src.deceased : dateTime as vs make tgt.deceased = create("dateTime") as vt then dateTime(vs, vt)
  "Patient-address" : for src.address make tgt.address
  "Patient-maritalStatus" : for src.maritalStatus make tgt.maritalStatus
  "Patient-multipleBirth-boolean" : for src.multipleBirth : boolean as vs make tgt.multipleBirth = create("boolean") as vt then boolean(vs, vt)
  "Patient-multipleBirth-integer" : for src.multipleBirth : integer as vs make tgt.multipleBirth = create("integer") as vt then integer(vs, vt)
  "Patient-photo" : for src.photo make tgt.photo
  "Patient-contact" : for src.contact as vs0 make tgt.contact as vt0 then patContact(vs0, vt0) 
  "Patient-animal" : for src.animal as vs0 make tgt.animal as vt0 then patAnimal(vs0, vt0) 
  "Patient-communication" : for src.communication as vs0 make tgt.communication as vt0 then patCommunication(vs0, vt0) 
  "Patient-careProvider" : for src.generalPractitioner make tgt.careProvider
  "Patient-managingOrganization" : for src.managingOrganization make tgt.managingOrganization
  "Patient-link" : for src.link as vs0 make tgt.link as vt0 then patLink(vs0, vt0)
endgroup

group patContact extends BackboneElement
  input src as source
  input tgt as target

  "Patient.contact-relationship" : for src.relationship make tgt.relationship
  "Patient.contact-name" : for src.name make tgt.name
  "Patient.contact-telecom" : for src.telecom make tgt.telecom
  "Patient.contact-address" : for src.address make tgt.address
  "Patient.contact-gender" : for src.gender make tgt.gender
  "Patient.contact-organization" : for src.organization make tgt.organization
  "Patient.contact-period" : for src.period make tgt.period
endgroup

group patCommunication extends BackboneElement
  input src as source
  input tgt as target

  "Patient.communication-language" : for src.language make tgt.language
  "Patient.communication-preferred" : for src.preferred make tgt.preferred
endgroup
    
group patAnimal extends BackboneElement
  input src as source
  input tgt as target

  "Patient.communication-species" : for src.species make tgt.species
  "Patient.communication-breed" : for src.breed make tgt.breed
  "Patient.communication-genderStatus" : for src.genderStatus make tgt.genderStatus
endgroup
    
  
group patLink extends BackboneElement
  input src as source
  input tgt as target

  "Patient.link-other" : for src.other make tgt.other
  "Patient.link-type" : for src.type make tgt.type
endgroup
