map "http://hl7.org/fhir/StructureMap/primitives2to3" = "R2 to R3 Primitive Conversions"

uses "http://hl7.org/fhir/DSTU2/StructureDefinition/base64Binary" alias base64BinaryR2 as source
uses "http://hl7.org/fhir/StructureDefinition/base64Binary" as target
uses "http://hl7.org/fhir/DSTU2/StructureDefinition/boolean" alias booleanR2 as source
uses "http://hl7.org/fhir/StructureDefinition/boolean" as target
uses "http://hl7.org/fhir/DSTU2/StructureDefinition/code" alias codeR2 as source
uses "http://hl7.org/fhir/StructureDefinition/code" as target
uses "http://hl7.org/fhir/DSTU2/StructureDefinition/date" alias dateR2 as source
uses "http://hl7.org/fhir/StructureDefinition/date" as target
uses "http://hl7.org/fhir/DSTU2/StructureDefinition/dateTime" alias dateTimeR2 as source
uses "http://hl7.org/fhir/StructureDefinition/dateTime" as target
uses "http://hl7.org/fhir/DSTU2/StructureDefinition/decimal" alias decimalR2 as source
uses "http://hl7.org/fhir/StructureDefinition/decimal" as target
uses "http://hl7.org/fhir/DSTU2/StructureDefinition/id" alias idR2 as source
uses "http://hl7.org/fhir/StructureDefinition/id" as target
uses "http://hl7.org/fhir/DSTU2/StructureDefinition/instant" alias instantR2 as source
uses "http://hl7.org/fhir/StructureDefinition/instant" as target
uses "http://hl7.org/fhir/DSTU2/StructureDefinition/integer" alias integerR2 as source
uses "http://hl7.org/fhir/StructureDefinition/integer" as target
uses "http://hl7.org/fhir/DSTU2/StructureDefinition/markdown" alias markdownR2 as source
uses "http://hl7.org/fhir/StructureDefinition/markdown" as target
uses "http://hl7.org/fhir/DSTU2/StructureDefinition/oid" alias oidR2 as source
uses "http://hl7.org/fhir/StructureDefinition/oid" as target
uses "http://hl7.org/fhir/DSTU2/StructureDefinition/positiveInt" alias positiveIntR2 as source
uses "http://hl7.org/fhir/StructureDefinition/positiveInt" as target
uses "http://hl7.org/fhir/DSTU2/StructureDefinition/string" alias stringR2 as source
uses "http://hl7.org/fhir/StructureDefinition/string" as target
uses "http://hl7.org/fhir/DSTU2/StructureDefinition/time" alias timeR2 as source
uses "http://hl7.org/fhir/StructureDefinition/time" as target
uses "http://hl7.org/fhir/DSTU2/StructureDefinition/unsignedInt" alias unsignedIntR2 as source
uses "http://hl7.org/fhir/StructureDefinition/unsignedInt" as target
uses "http://hl7.org/fhir/DSTU2/StructureDefinition/uri" alias uriR2 as source
uses "http://hl7.org/fhir/StructureDefinition/uri" as target
uses "http://hl7.org/fhir/DSTU2/StructureDefinition/uuid" alias uuidR2 as source
uses "http://hl7.org/fhir/StructureDefinition/uuid" as target
uses "http://hl7.org/fhir/DSTU2/StructureDefinition/xhtml" alias xhtmlR2 as source
uses "http://hl7.org/fhir/StructureDefinition/xhtml" as target

imports "http://hl7.org/fhir/StructureMap/Element2to3"

group for type+types base64Binary extends Element
  input src : base64BinaryR2 as source
  input tgt : base64Binary as target

  "base64Binary-value" : for src.value as v make tgt.value = v

endgroup

group for type+types boolean extends Element
  input src : booleanR2 as source
  input tgt : boolean as target

  "boolean-value" : for src.value as v make tgt.value = v
endgroup

group for type+types code extends Element
  input src : codeR2 as source
  input tgt : code as target

  "code-value" : for src.value as v make tgt.value = v
endgroup

group for type+types date extends Element
  input src : dateR2 as source
  input tgt : date as target

  "date-value" : for src.value as v make tgt.value = v
endgroup

group for type+types dateTime extends Element
  input src : dateTimeR2 as source
  input tgt : dateTime as target

  "dateTime-value" : for src.value as v make tgt.value = v
endgroup

group for type+types decimal extends Element
  input src : decimalR2 as source
  input tgt : decimal as target

  "decimal-value" : for src.value as v make tgt.value = v
endgroup

group for type+types id extends Element
  input src : idR2 as source
  input tgt : id as target

  "id-value" : for src.value as v make tgt.value = v
endgroup

group for type+types instant extends Element
  input src : instantR2 as source
  input tgt : instant as target

  "instant-value" : for src.value as v make tgt.value = v
endgroup

group for type+types integer extends Element
  input src : integerR2 as source
  input tgt : integer as target

  "integer-value" : for src.value as v make tgt.value = v
endgroup

group for type+types markdown extends Element
  input src : markdownR2 as source
  input tgt : markdown as target

  "markdown-value" : for src.value as v make tgt.value = v
endgroup

group for type+types oid extends Element
  input src : oidR2 as source
  input tgt : oid as target

  "oid-value" : for src.value as v make tgt.value = v
endgroup

group for type+types positiveInt extends Element
  input src : positiveIntR2 as source
  input tgt : positiveInt as target

  "positiveInt-value" : for src.value as v make tgt.value = v
endgroup

group for type+types string extends Element
  input src : stringR2 as source
  input tgt : string as target

  "string-value" : for src.value as v make tgt.value = v
endgroup

group for type+types time extends Element
  input src : timeR2 as source
  input tgt : time as target

  "time-value" : for src.value as v make tgt.value = v
endgroup

group for type+types unsignedInt extends Element
  input src : unsignedIntR2 as source
  input tgt : unsignedInt as target

  "unsignedInt-value" : for src.value as v make tgt.value = v
endgroup

group for type+types uri extends Element
  input src : uriR2 as source
  input tgt : uri as target

  "uri-value" : for src.value as v make tgt.value = v
endgroup

group for type+types uuid extends Element
  input src : uuidR2 as source
  input tgt : uuid as target

  "uuid-value" : for src.value as v make tgt.value = v
endgroup

group for type+types xhtml extends Element
  input src : xhtmlR2 as source
  input tgt : xhtml as target

  "xhtml-value" : for src.value as v make tgt.value = v
endgroup

group for types stringToMarkdown extends Element
  input src : stringR2 as source
  input tgt : markdown as target

  "stringToMarkdown-value" : for src.value as v make tgt.value = v
endgroup

group for types codeToUri extends Element
  input src : codeR2 as source
  input tgt : uri as target

  "codeToUri-value" : for src.value as v make tgt.value = v
endgroup

group for types stringToId extends Element
  input src : stringR2 as source
  input tgt : id as target

  "stringToId-value" : for src.value as v make tgt.value = v
endgroup

group for types idToString extends Element
  input src : idR2 as source
  input tgt : string as target

  "stringToId-value" : for src.value as v make tgt.value = v
endgroup

group for types stringToUri extends Element
  input src : stringR2 as source
  input tgt : uri as target

  "stringToUri-value" : for src.value as v make tgt.value = v
endgroup

group for types stringToCode extends Element
  input src : stringR2 as source
  input tgt : code as target

  "stringToCode-value" : for src.value as v make tgt.value = v
endgroup

group for types codeToString extends Element
  input src : codeR2 as source
  input tgt : string as target

  "stringToCode-value" : for src.value as v make tgt.value = v
endgroup

group for types integerToPositiveInt extends Element
  input src : integerR2 as source
  input tgt : positiveInt as target

  "integerToPositiveInt-value" : for src.value as v make tgt.value = v
endgroup

group for types integerToUnsignedInt extends Element
  input src : integerR2 as source
  input tgt : unsignedInt as target

  "integerToUnsignedInt-value" : for src.value as v make tgt.value = v
endgroup

group for types dateToDateTime extends Element
  input src : dateR2 as source
  input tgt : dateTime as target

  "dateToDateTime-value" : for src.value as v make tgt.value = v
endgroup

group for types dateTimeToDate extends Element
  input src : dateTimeR2 as source
  input tgt : date as target

  "dateTimeToDate-value" : for src.value as v make tgt.value = (v.substring(0, 8))
endgroup

