map "http://hl7.org/fhir/StructureMap/StructureDefinition2to3" = "R2 to R3 Conversions for StructureDefinition"

uses "http://hl7.org/fhir/DSTU2/StructureDefinition/StructureDefinition" alias StructureDefinitionR2 as source
uses "http://hl7.org/fhir/StructureDefinition/StructureDefinition" alias StructureDefinition as target

imports "http://hl7.org/fhir/StructureMap/*2to3"

group for type+types  StructureDefinition extends DomainResource
  input src : StructureDefinitionR2 as source
  input tgt : StructureDefinition as target

  "StructureDefinition-url" : for src.url make tgt.url
  "StructureDefinition-identifier" : for src.identifier make tgt.identifier
  "StructureDefinition-version" : for src.version make tgt.version
  "StructureDefinition-name" : for src.name make tgt.name
  "StructureDefinition-title" : for src.display make tgt.title
  "StructureDefinition-status" : for src.status make tgt.status
  "StructureDefinition-experimental" : for src.experimental make tgt.experimental
  "StructureDefinition-publisher" : for src.publisher make tgt.publisher
  "StructureDefinition-contact" : for src.contact as vs0 make tgt.contact as vt0 then {
    "ContactDetail-name" : for vs0.name make vt0.name
    "ContactDetail-telecom" : for vs0.telecom make vt0.telecom
  }

  "StructureDefinition-date" : for src.date make tgt.date
  "StructureDefinition-description" : for src.description make tgt.description
  "StructureDefinition-purpose" : for src.requirements make tgt.purpose
  "StructureDefinition-copyright" : for src.copyright make tgt.copyright
  "StructureDefinition-jurisdiction" : for src.useContext where coding.system = 'urn:iso:std:iso:3166' make tgt.jurisdiction
  "StructureDefinition-useContext" : for src.useContext as vs where (coding.system = 'urn:iso:std:iso:3166').not() make  tgt.useContext as uc,  uc.code as ucc,  ucc.system = "http://hl7.org/fhir/usage-context-type",  ucc.code = "task",  uc.value as vt then CodeableConcept(vs, vt)
  "StructureDefinition-keyword" : for src.code make tgt.keyword
  "StructureDefinition-fhirVersion" : for src.fhirVersion make tgt.fhirVersion
  "StructureDefinition-mapping" : for src.mapping as vs0 make tgt.mapping as vt0 then {
    "StructureDefinition.mapping-identity" : for vs0.identity make vt0.identity
    "StructureDefinition.mapping-uri" : for vs0.uri make vt0.uri
    "StructureDefinition.mapping-name" : for vs0.name make vt0.name
    "StructureDefinition.mapping-comments" : for vs0.comments make vt0.comment
  }

  "StructureDefinition-derivation-1" : for src where constrainedType.empty() make tgt.derivation = "specialization"
  "StructureDefinition-type-1" : for src.id as vs where src.constrainedType.empty() make tgt.type = vs
  "StructureDefinition-derivation-2" : for src where constrainedType.exists() make tgt.derivation = "constraint"
  "StructureDefinition-type-2" : for src.constrainedType as vs make tgt.type = vs
  "StructureDefinition-kind-1" : for src.kind where $this = 'logical' make tgt.kind
  "StructureDefinition-kind-2" : for src.kind where $this = 'resource' make tgt.kind
  "StructureDefinition-kind-3" : for src.kind as vt where ($this = 'datatype') and (src.id in ('boolean' | 'integer' | 'string' | 'decimal' | 'uri' | 'base64Binary' | 'instant' | 'date' | 'dateTime' | 'time' | 'code' | 'oid' | 'id' | 'markdown' | 'unsignedInt' | 'positiveInt')) make tgt.kind = "primitive-type" as vt
  "StructureDefinition-kind-4" : for src.kind as vt where ($this = 'datatype') and (src.id in ('boolean' | 'integer' | 'string' | 'decimal' | 'uri' | 'base64Binary' | 'instant' | 'date' | 'dateTime' | 'time' | 'code' | 'oid' | 'id' | 'markdown' | 'unsignedInt' | 'positiveInt')).not() make tgt.kind = "complex-type" as vt
  "StructureDefinition-abstract" : for src.abstract make tgt.abstract
  "StructureDefinition-contextType" : for src.contextType make tgt.contextType
  "StructureDefinition-context" : for src.context make tgt.context
  "StructureDefinition-type" : for src.constrainedType make tgt.type
  "StructureDefinition-baseDefinition" : for src.base make tgt.baseDefinition
  "StructureDefinition-snapshot" : for src.snapshot as vs0 make tgt.snapshot as vt0 then {
    "StructureDefinition.snapshot-element-1" : for vs0.element first as vs make  vt0.element as vt,  create("boolean") as first,  first.value = "true" then ElementDefinition(vs, vt, first)
    "StructureDefinition.snapshot-element-2" : for vs0.element not_first as vs make  vt0.element as vt,  create("boolean") as first,  first.value = "false" then ElementDefinition(vs, vt, first)
  }

  "StructureDefinition-differential" : for src.differential first as vs0 make tgt.differential as vt0 then {
    "StructureDefinition.differential-element-1" : for vs0.element first as vs make  vt0.element as vt,  create("boolean") as first,  first.value = "true" then ElementDefinition(vs, vt, first)
    "StructureDefinition.differential-element-2" : for vs0.element not_first as vs make  vt0.element as vt,  create("boolean") as first,  first.value = "false" then ElementDefinition(vs, vt, first)
  }


endgroup
